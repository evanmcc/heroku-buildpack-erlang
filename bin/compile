#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit
DEFAULT_OTP_VERSION="master"
if [ -f ${build}/.preferred_otp_version ]; then
    OTP_VERSION=$(cat ${build}/.preferred_otp_version)
fi
ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
case $STACK in
    cedar-14)
        tarball="runtimes/${ver}_cedar-14.tgz"
        strip=""
        ;;
    *)
        tarball="${ver}.tgz"
        strip="--strip-components=2"
        ;;
esac
OTP_TARBALL_URL="https://s3.amazonaws.com/heroku-buildpack-erlang/${tarball}"
ERLROOT=${build}/otp
PROFILE=${HOME}/.profile.d

echo "-----> Using Erlang/$ver"

(
    set -e

    # Already cached?
    test -f ${cache}/${tarball} && exit

    rm -rf ${cache}/* # be sure not to build up cruft
    cd ${cache}
    echo "-------> Fetching Erlang/$ver"
    curl -sO ${OTP_TARBALL_URL} || exit 1

    file ${tarball} | grep -ql gzip
    if [ $? -ne 0 ]; then3
        echo "-------> Failed fetching tarball, exiting."
        exit 1
    fi
)

echo "-------> Unpacking Erlang/OTP $ver"
mkdir -p ${ERLROOT}
tar zxf ${cache}/${tarball} -C ${ERLROOT} ${strip}
echo "-------> Installing Erlang/OTP $ver"
ln -s ${ERLROOT} /app/otp
${ERLROOT}/Install -minimal /app/otp

PATH=/app/otp/bin:$PATH
export PATH

cd $build

if [ ! -e "rebar" ]; then
  echo "-----> Installing Rebar from buildpack"
  cp ${bpdir}/opt/rebar ./
fi

echo "-----> Building with Rebar"
unset GIT_DIR
./rebar get-deps compile 2>&1 | sed -u 's/^/       /'
if [ ${PIPESTATUS[0]} -ne 0 ]; then
  echo "-----> Build failed"
  exit 1
fi

if [ -f ${bpdir}/opt/otp.sh ]; then
  mkdir -p ${PROFILE}
  cp ${bpdir}/opt/otp.sh ${PROFILE}
fi

echo "-----> Build succeeded"
